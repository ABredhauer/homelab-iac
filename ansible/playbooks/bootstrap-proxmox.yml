---
# ansible/playbooks/bootstrap-proxmox.yml
# Bootstrap Proxmox host - sets hostname, configures network, installs packages

- name: Bootstrap Proxmox Host
  hosts: proxmox_nodes
  become: true
  gather_facts: true  # Required for ansible_date_time and system facts
  
  vars:
    # Get config from inventory
    target_hostname: "{{ inventory_hostname }}"
    node_id: "{{ hostvars[inventory_hostname].node_id }}"
    node_description: "{{ hostvars[inventory_hostname].node_description }}"
    primary_mac: "{{ hostvars[inventory_hostname].primary_mac }}"
    network_config: "{{ hostvars[inventory_hostname].network_interfaces }}"
    target_ip: "{{ network_config.primary.static_ip }}"
    
    # Semaphore API (from Variable Group)
    semaphore_url: "{{ SEMAPHORE_WEB_ROOT }}"
    semaphore_project_id: "{{ SEMAPHORE_PROJECT_ID }}"
    semaphore_inventory_id: "{{ SEMAPHORE_INVENTORY_ID }}"
    semaphore_api_token: "{{ SEMAPHORE_API_TOKEN }}"
  
  tasks:
    - name: Display bootstrap information
      debug:
        msg: |
          Bootstrapping Proxmox Host
          ==========================
          Target Hostname: {{ target_hostname }}
          Node ID: {{ node_id }}
          Description: {{ node_description }}
          Current IP: {{ ansible_default_ipv4.address }}
          Target IP: {{ target_ip }}
          Primary MAC: {{ primary_mac }}
    
    # ===== HOSTNAME CONFIGURATION =====
    - name: Set system hostname
      hostname:
        name: "{{ target_hostname }}"
    
    - name: Backup /etc/hosts
      copy:
        src: /etc/hosts
        dest: "/etc/hosts.backup.{{ ansible_date_time.epoch }}"
        remote_src: yes
    
    - name: Configure /etc/hosts - Remove temp entries
      lineinfile:
        path: /etc/hosts
        regexp: ".*pve-temp.*"
        state: absent
    
    - name: Configure /etc/hosts - localhost entry
      lineinfile:
        path: /etc/hosts
        line: "127.0.1.1 {{ target_hostname }}.homelab.local {{ target_hostname }}"
        regexp: "^127\\.0\\.1\\.1"
    
    - name: Configure /etc/hosts - cluster nodes
      blockinfile:
        path: /etc/hosts
        marker: "# {mark} ANSIBLE MANAGED - Proxmox Cluster Nodes"
        block: |
          # Proxmox cluster nodes
          192.168.1.230 pve-node1.homelab.local pve-node1
          192.168.1.232 pve-node2.homelab.local pve-node2
    
    # ===== REPOSITORY CONFIGURATION =====
    - name: Disable Proxmox enterprise repositories (deb822 format)
      replace:
        path: "{{ item }}"
        regexp: '^(Types:|URIs:|Suites:|Components:|Signed-By:)'
        replace: '# \1'
      with_fileglob:
        - /etc/apt/sources.list.d/*.sources
      when: "'enterprise.proxmox.com' in lookup('file', item, errors='ignore')"
      ignore_errors: yes
    
    - name: Disable enterprise repositories (legacy .list format)
      shell: |
        for file in /etc/apt/sources.list.d/*.list; do
          if [ -f "$file" ] && grep -q "enterprise.proxmox.com" "$file"; then
            mv "$file" "$file.disabled"
          fi
        done
      args:
        executable: /bin/bash
    
    - name: Configure Proxmox no-subscription repository
      copy:
        dest: /etc/apt/sources.list.d/proxmox.sources
        content: |
          Types: deb
          URIs: http://download.proxmox.com/debian/pve
          Suites: trixie
          Components: pve-no-subscription
          Signed-By: /usr/share/keyrings/proxmox-archive-keyring.gpg
        mode: '0644'
    
    - name: Configure Ceph no-subscription repository
      copy:
        dest: /etc/apt/sources.list.d/ceph.sources
        content: |
          Types: deb
          URIs: http://download.proxmox.com/debian/ceph-squid
          Suites: trixie
          Components: no-subscription
          Signed-By: /usr/share/keyrings/proxmox-archive-keyring.gpg
        mode: '0644'
    
    # ===== PACKAGE MANAGEMENT =====
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
    
    - name: Install essential packages
      apt:
        name:
          - curl
          - wget
          - git
          - htop
          - vim
          - net-tools
          - tree
          - rsync
          - screen
          - tmux
          - python3-pip
          - fail2ban
          - ufw
          - nut-client
          - fwupd
          - isc-dhcp-client
          - libnss-myhostname
        state: present
    
    - name: Perform full system upgrade
      apt:
        upgrade: dist
        autoremove: yes
        autoclean: yes
    
    # ===== PROXMOX CONFIGURATION =====
    - name: Remove subscription nag
      replace:
        path: /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js
        regexp: '(data\.status !== .active.)'
        replace: 'false'
      ignore_errors: yes
    
    - name: Enable Proxmox services
      systemd:
        name: "{{ item }}"
        enabled: yes
        state: started
      loop:
        - pveproxy
        - pvedaemon
        - pvestatd
        - pve-ha-lrm
        - pve-ha-crm
        - corosync
      ignore_errors: yes
    
    # ===== SYSTEM CONFIGURATION =====
    - name: Configure timezone
      timezone:
        name: Australia/Brisbane
    
    - name: Configure NTP
      copy:
        dest: /etc/systemd/timesyncd.conf
        content: |
          [Time]
          NTP=0.au.pool.ntp.org 1.au.pool.ntp.org 2.au.pool.ntp.org
          FallbackNTP=ntp.ubuntu.com
        mode: '0644'
      notify: restart timesyncd
    
    # ===== COMPLETION MARKERS =====
    - name: Create bootstrap completion file
      copy:
        dest: /opt/ansible-bootstrap-complete
        content: |
          Ansible Bootstrap Complete
          ==========================
          Hostname: {{ target_hostname }}
          Node ID: {{ node_id }}
          Description: {{ node_description }}
          Primary MAC: {{ primary_mac }}
          IP Address: {{ ansible_default_ipv4.address }}
          Bootstrapped: {{ ansible_date_time.iso8601 }}
          By: Ansible Semaphore
        mode: '0644'
    
    - name: Create node identity file
      copy:
        dest: /opt/homelab-node-identity
        content: "{{ target_hostname }}"
        mode: '0644'
    
    # ===== UPDATE LIFECYCLE STATE =====
    - name: Fetch current inventory from Semaphore
      uri:
        url: "{{ semaphore_url }}/api/project/{{ semaphore_project_id }}/inventory/{{ semaphore_inventory_id }}"
        method: GET
        headers:
          Authorization: "Bearer {{ semaphore_api_token }}"
        return_content: yes
      register: inventory_fetch
      delegate_to: localhost
    
    - name: Parse inventory
      set_fact:
        current_inv: "{{ inventory_fetch.json.inventory | from_yaml }}"
        inv_meta: "{{ inventory_fetch.json }}"
      delegate_to: localhost
    
    - name: Update host lifecycle state to bootstrapped
      set_fact:
        updated_inv: >-
          {{
            current_inv | combine({
              'all': {
                'children': {
                  'proxmox_nodes': {
                    'hosts': current_inv.all.children.proxmox_nodes.hosts | combine({
                      inventory_hostname: current_inv.all.children.proxmox_nodes.hosts[inventory_hostname] | combine({
                        'lifecycle_state': 'bootstrapped',
                        'bootstrapped_at': ansible_date_time.iso8601,
                        'ansible_host': target_ip
                      })
                    })
                  }
                }
              }
            }, recursive=True)
          }}
      delegate_to: localhost
    
    - name: Save updated inventory to Semaphore
      uri:
        url: "{{ semaphore_url }}/api/project/{{ semaphore_project_id }}/inventory/{{ semaphore_inventory_id }}"
        method: PUT
        headers:
          Authorization: "Bearer {{ semaphore_api_token }}"
          Content-Type: "application/json"
        body_format: json
        body: "{{ inv_meta | combine({'inventory': updated_inv | to_nice_yaml}) }}"
        status_code: 204
      delegate_to: localhost
    
    - name: Display completion message
      debug:
        msg: |
          ✓ Bootstrap complete for {{ target_hostname }}
          ✓ Hostname configured
          ✓ Repositories updated
          ✓ System packages upgraded
          ✓ Proxmox services enabled
          ✓ Lifecycle state: bootstrapped
          
          Next: Configure network interfaces and join cluster
  
  handlers:
    - name: restart timesyncd
      systemd:
        name: systemd-timesyncd
        state: restarted
        enabled: yes
